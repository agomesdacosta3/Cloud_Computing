version: '3'

services:
  db:
    container_name: db
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: db
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - db_network
    ports:
      - 5432:5432

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: postgres
      PGADMIN_LISTEN_PORT: 5050
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - postgresql_bin:/usr/lib/postgresql
      - pgadmin_root_prefs:/root/.pgadmin
      - pgadmin_working_dir:/var/lib/pgadmin
      - ./files:/files
    ports:
      - 5050:5050
    networks:
      - db_network

  app:
    container_name: app
    build:
      context: ./app
      dockerfile: Dockerfile
    environment:
      DB_HOST: db
    depends_on:
      - db
    ports:
      - "8000:8000"
    networks:
      - db_network
      - app_network

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/etc/ssl/certs
    networks:
      - app_network
    depends_on:
      - app
    restart: always

  test-runner:
    container_name: test-runner
    build:
      context: ./scripts
      dockerfile: Dockerfile
    depends_on:
      - db
      - app
    networks:
      - db_network
      - app_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  db_network:
    driver: bridge
  app_network:
    driver: bridge


volumes:
  pgadmin_root_prefs:
    driver: local
  pgadmin_working_dir:
    driver: local
  postgresql_data:
    driver: local
  postgresql_bin:
    driver: local
